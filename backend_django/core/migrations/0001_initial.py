# Generated by Django 5.2.1 on 2025-06-09 10:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChecklistTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=200)),
                ('country', models.CharField(db_index=True, max_length=100)),
                ('topic', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'checklist_templates',
            },
        ),
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField()),
                ('post_type', models.CharField(choices=[('review', '후기'), ('question', '질문'), ('tip', '여행팁'), ('info', '정보공유')], max_length=20)),
                ('country', models.CharField(db_index=True, max_length=100)),
                ('topic', models.CharField(db_index=True, max_length=100)),
                ('author_name', models.CharField(default='익명', max_length=50)),
                ('author_session', models.CharField(db_index=True, max_length=100)),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('rating', models.IntegerField(blank=True, choices=[(1, '⭐'), (2, '⭐⭐'), (3, '⭐⭐⭐'), (4, '⭐⭐⭐⭐'), (5, '⭐⭐⭐⭐⭐')], null=True)),
            ],
            options={
                'db_table': 'community_posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(db_index=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('topic', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'conversations',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=500)),
                ('url', models.URLField(blank=True, max_length=500, null=True)),
                ('country', models.CharField(db_index=True, max_length=100)),
                ('topic', models.CharField(db_index=True, max_length=100)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'documents',
            },
        ),
        migrations.CreateModel(
            name='EmbassyNotice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('country', models.CharField(db_index=True, max_length=100)),
                ('title', models.CharField(max_length=500)),
                ('content', models.TextField()),
                ('notice_date', models.DateTimeField()),
                ('url', models.URLField(max_length=500)),
                ('importance', models.CharField(choices=[('low', '일반'), ('medium', '중요'), ('high', '긴급')], default='low', max_length=20)),
            ],
            options={
                'db_table': 'embassy_notices',
                'ordering': ['-notice_date'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.TextField()),
                ('country', models.CharField(db_index=True, max_length=100)),
                ('topic', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'db_table': 'faqs',
            },
        ),
        migrations.CreateModel(
            name='WeatherInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('country', models.CharField(db_index=True, max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('temperature', models.FloatField()),
                ('weather_condition', models.CharField(max_length=100)),
                ('humidity', models.IntegerField()),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'weather_info',
            },
        ),
        migrations.CreateModel(
            name='ChecklistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('estimated_time', models.CharField(blank=True, max_length=50)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.checklisttemplate')),
            ],
            options={
                'db_table': 'checklist_items',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CommunityComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('author_name', models.CharField(default='익명', max_length=50)),
                ('author_session', models.CharField(db_index=True, max_length=100)),
                ('likes', models.IntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core.communitycomment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.communitypost')),
            ],
            options={
                'db_table': 'community_comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_currency', models.CharField(max_length=3)),
                ('to_currency', models.CharField(max_length=3)),
                ('rate', models.DecimalField(decimal_places=4, max_digits=10)),
                ('source', models.CharField(default='fixer.io', max_length=50)),
            ],
            options={
                'db_table': 'exchange_rates',
                'unique_together': {('from_currency', 'to_currency')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(max_length=20)),
                ('content', models.TextField()),
                ('references', models.TextField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.conversation')),
            ],
            options={
                'db_table': 'messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_session', models.CharField(max_length=100)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.communitycomment')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.communitypost')),
            ],
            options={
                'db_table': 'post_likes',
                'unique_together': {('comment', 'user_session'), ('post', 'user_session')},
            },
        ),
    ]
